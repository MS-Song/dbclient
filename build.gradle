buildscript {
	ext {
		springBootVersion = '2.2.6.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "http://www.datanucleus.org/downloads/maven2" }
	}
	dependencies {
		// spring repo
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
 
// 플러그인 지정
plugins {
    id 'com.palantir.docker' version '0.25.0'
}

allprojects {
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.song7749'
	sourceCompatibility = 11
	targetCompatibility = 11

	// gralde 버전 지정
	task wrapper(type: Wrapper) { 
		gradleVersion = "6.8" 
	}

	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "http://www.datanucleus.org/downloads/maven2" }

	}

	test {
		useJUnitPlatform {
//			includeTags "fast", "smoke & feature-a" //@Tag("대응")
			excludeTags "slow", "exclude", "generateCode"
			includeEngines "junit-jupiter"
		}
		reports.html.enabled = false
	}

	task initSourceFolders {
	    sourceSets*.java.srcDirs*.each {
	        if( !it.exists() ) {
	            it.mkdirs()
	        }
	    }
	 
	    sourceSets*.resources.srcDirs*.each {
	        if( !it.exists() ) {
	            it.mkdirs()
	        }
	    }
	}
	
	dependencies {
		// Spring
		implementation('org.springframework.boot:spring-boot-starter-aop')
		implementation('org.springframework.boot:spring-boot-starter-cache')
		implementation('org.springframework.boot:spring-boot-starter-data-jpa')
		implementation('org.springframework.boot:spring-boot-starter-mail')
		implementation('org.springframework.boot:spring-boot-starter-validation')
		implementation('org.springframework.boot:spring-boot-starter-web')
        implementation ('org.springframework.boot:spring-boot-starter-webflux')

		// lang
		implementation('org.apache.commons:commons-lang3')
		// model mapper
	    implementation('org.modelmapper:modelmapper:1.1.2')
		// jaxb
		implementation('javax.xml.bind:jaxb-api:2.2.11')
        // YAML/YML Contents Negotiation dependucy
        implementation ('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.10.2')
        implementation ('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.2')
		// ehcach
		implementation('net.sf.ehcache:ehcache:2.10.3')
		// jwt
		implementation("com.nimbusds:nimbus-jose-jwt:5.9")
		// excel
		implementation("org.apache.poi:poi:3.17")
		implementation("org.apache.poi:poi-ooxml:3.17")

		// database 
	    implementation('mysql:mysql-connector-java')
		implementation('org.mariadb.jdbc:mariadb-java-client:2.2.3')
		implementation('oracle:ojdbc6:11.2.0.3')
		implementation('com.microsoft.sqlserver:mssql-jdbc:6.4.0.jre8')
		implementation('com.h2database:h2')

		// web-socket
		implementation('org.springframework.boot:spring-boot-starter-websocket')
		implementation('org.webjars:sockjs-client:1.1.2')
		implementation('org.webjars:stomp-websocket:2.3.1')
		implementation('org.webjars:webjars-locator:0.30')

		// swagger
	    implementation('io.springfox:springfox-swagger2:2.8.0')
	    implementation('io.springfox:springfox-swagger-ui:2.8.0')

		// test & dev tools
		implementation("org.springframework.boot:spring-boot-devtools")
		testImplementation('org.springframework.boot:spring-boot-starter-test')
		testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')

		// junit5
		testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.2')
		testRuntimeOnly ('org.junit.jupiter:junit-jupiter-engine:5.5.2')
		testImplementation ('org.junit.platform:junit-platform-launcher:1.5.2')

		// lombok
		compileOnly	('org.projectlombok:lombok:1.18.8')
		annotationProcessor ('org.projectlombok:lombok:1.18.8')
		testAnnotationProcessor ('org.projectlombok:lombok:1.18.8')
		testCompileOnly ('org.projectlombok:lombok:1.18.8')
		testImplementation('org.springframework.security:spring-security-test:5.2.2.RELEASE')
	}
}